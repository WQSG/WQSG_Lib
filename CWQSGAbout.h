/*  WQSG_Lib
*  Copyright (C) WQSG <wqsg@qq.com>
*
*  This program is free software; you can redistribute it and/or modify
*  it under the terms of the GNU General Public License as published by
*  the Free Software Foundation; either version 2 of the License, or
*  (at your option) any later version.
*
*  This program is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*  GNU General Public License for more details.
*
*  You should have received a copy of the GNU General Public License
*  along with this program; if not, write to the Free Software
*  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
*/
#pragma once

/*<A HREF=""http://www.help.com"">Website</A>,*/

#include <shellapi.h>
#include <commctrl.h>
#include <objbase.h>




class CWQSG_About
{
public:
#pragma pack(push,1)
	struct SWQSG_AboutDlgID
	{
		int m_nIcon;
		int m_nAppName;
		int m_nLink;
		int m_nEdit;
	};
#pragma pack(pop)
protected:
	HWND m_hWndParent;
	HICON m_hIcon;
	const WCHAR* m_pTitle;
	const WCHAR* m_pAppName;
	const WCHAR* m_pUrl;
	const WCHAR* m_pProgrammed;

	inline static INT_PTR CALLBACK AboutFunc(HWND, UINT, WPARAM, LPARAM);
public:
	CWQSG_About()
		: m_hWndParent(NULL)
		, m_hIcon(NULL)
		, m_pTitle(NULL)
		, m_pAppName(NULL)
		, m_pUrl(NULL)
		, m_pProgrammed(NULL)
	{

	}

	inline INT_PTR WQSG_About( HICON a_hIcon , HWND a_hWndParent , const WCHAR* a_pTitle , const WCHAR* a_pAppName ,
		const WCHAR* a_pUrl , const WCHAR* a_pProgrammed );
};

inline CWQSG_About& GetWQSGAbout();

inline INT_PTR CWQSG_About::WQSG_About( HICON a_hIcon , HWND a_hWndParent , const WCHAR* a_pTitle , const WCHAR* a_pAppName ,
								const WCHAR* a_pUrl , const WCHAR* a_pProgrammed )
{
	GetWQSGAbout().m_hIcon = a_hIcon;
	GetWQSGAbout().m_hWndParent = a_hWndParent;
	GetWQSGAbout().m_pTitle = a_pTitle;
	GetWQSGAbout().m_pAppName = a_pAppName;
	GetWQSGAbout().m_pUrl = a_pUrl;
	GetWQSGAbout().m_pProgrammed = a_pProgrammed;

	static unsigned char g_dlg[] = {
		0x01, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x00, 0xc8, 0x80, 
		0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0xab, 0x00, 0x8e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x73, 0x51, 
		0x8e, 0x4e, 0x20, 0x00, 0x43, 0x00, 0x41, 0x00, 0x62, 0x00, 0x6f, 0x00, 0x75, 0x00, 0x74, 0x00, 
		0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x01, 0x4d, 0x00, 0x53, 0x00, 0x20, 0x00, 0x53, 0x00, 
		0x68, 0x00, 0x65, 0x00, 0x6c, 0x00, 0x6c, 0x00, 0x20, 0x00, 0x44, 0x00, 0x6c, 0x00, 0x67, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x50, 
		0x2b, 0x00, 0x07, 0x00, 0x12, 0x00, 0x12, 0x00, 0xe8, 0x03, 0x00, 0x00, 0xff, 0xff, 0x82, 0x00, 
		0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x01, 0x50, 0x0e, 0x00, 0x21, 0x00, 0x8e, 0x00, 0x29, 0x00, 0xe9, 0x03, 0x00, 0x00, 
		0x53, 0x00, 0x79, 0x00, 0x73, 0x00, 0x4c, 0x00, 0x69, 0x00, 0x6e, 0x00, 0x6b, 0x00, 0x00, 0x00, 
		0x3c, 0x00, 0x61, 0x00, 0x3e, 0x00, 0x53, 0x00, 0x79, 0x00, 0x73, 0x00, 0x4c, 0x00, 0x69, 0x00, 
		0x6e, 0x00, 0x6b, 0x00, 0x31, 0x00, 0x3c, 0x00, 0x2f, 0x00, 0x61, 0x00, 0x3e, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x08, 0x81, 0x50, 
		0x07, 0x00, 0x59, 0x00, 0x9d, 0x00, 0x2e, 0x00, 0xea, 0x03, 0x00, 0x00, 0xff, 0xff, 0x81, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x50, 
		0x3f, 0x00, 0x07, 0x00, 0x65, 0x00, 0x13, 0x00, 0xeb, 0x03, 0x00, 0x00, 0xff, 0xff, 0x82, 0x00, 
		0x59, 0x97, 0x01, 0x60, 0x0d, 0x00, 0x0a, 0x00, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x50, 0x38, 0x00, 0x50, 0x00, 
		0x32, 0x00, 0x08, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x82, 0x00, 0x50, 0x00, 0x72, 0x00, 
		0x6f, 0x00, 0x67, 0x00, 0x72, 0x00, 0x61, 0x00, 0x6d, 0x00, 0x6d, 0x00, 0x65, 0x00, 0x64, 0x00, 
		0x20, 0x00, 0x62, 0x00, 0x79, 0x00, 0x00, 0x00, 0x00, 0x00, 
	};

	return DialogBoxIndirect( NULL , (LPDLGTEMPLATE)g_dlg , GetWQSGAbout().m_hWndParent , CWQSG_About::AboutFunc );
}

inline INT_PTR CALLBACK CWQSG_About::AboutFunc(HWND a_hDlg, UINT a_message, WPARAM a_wParam, LPARAM a_lParam)
{
	static unsigned char g_ids[] = {
		0xe8, 0x03, 0x00, 0x00, 0xeb, 0x03, 0x00, 0x00, 0xe9, 0x03, 0x00, 0x00, 0xea, 0x03, 0x00, 0x00, 
	};

	if( sizeof(CWQSG_About::SWQSG_AboutDlgID) != sizeof(g_ids) )
	{
		__asm int 3;
		return (INT_PTR)FALSE;
	}

	static const CWQSG_About::SWQSG_AboutDlgID& s_ids = *(const SWQSG_AboutDlgID*)g_ids;

	switch (a_message)
	{
	case WM_INITDIALOG:
		SendMessage( a_hDlg , WM_SETICON , TRUE , (LPARAM)GetWQSGAbout().m_hIcon );
		SendMessage( a_hDlg , WM_SETICON , FALSE , (LPARAM)GetWQSGAbout().m_hIcon );

		SetWindowText( a_hDlg , GetWQSGAbout().m_pTitle );

		SendMessage( GetDlgItem( a_hDlg , s_ids.m_nIcon ) , STM_SETICON, (WPARAM)GetWQSGAbout().m_hIcon , 0L);
		SetDlgItemText( a_hDlg , s_ids.m_nAppName , GetWQSGAbout().m_pAppName );

		SetDlgItemText( a_hDlg , s_ids.m_nLink , GetWQSGAbout().m_pUrl );

		SetDlgItemText( a_hDlg , s_ids.m_nEdit , GetWQSGAbout().m_pProgrammed );

		return (INT_PTR)TRUE;
	case WM_NOTIFY:
		{
			const LPNMHDR pNMHdr = (LPNMHDR)a_lParam;
			switch (pNMHdr->code)
			{
				//case NM_RETURN:
			case NM_CLICK:
				{
					const PNMLINK pNMLink = (PNMLINK)a_lParam;

					if( *pNMLink->item.szUrl )
						ShellExecute( NULL , L"open" , pNMLink->item.szUrl , NULL , NULL , SW_SHOW );
				}
				break;
			};
		}
	case WM_COMMAND:
		if (LOWORD(a_wParam) == IDOK || LOWORD(a_wParam) == IDCANCEL)
		{
			EndDialog( a_hDlg , LOWORD(a_wParam) );
			return (INT_PTR)TRUE;
		}
		break;
	}
	return (INT_PTR)FALSE;
}

inline CWQSG_About& GetWQSGAbout()
{
	static CWQSG_About about;
	return about;
}
